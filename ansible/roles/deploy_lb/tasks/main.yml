---
- name: Install packages
  apt:
    name: "{{ packages }}"
    state: present

- name: check if certificates exists
  stat: 
    path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
  register: letsencrypt_cert

- debug: msg="{{ letsencrypt_cert.stat.exists }}"

- name: turn off nginx
  service:
    name: nginx
    state: stopped
  when: not letsencrypt_cert.stat.exists

- name: Generate certificate for https
  shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}"
  when: not letsencrypt_cert.stat.exists

- name: start nginx
  service:
    name: nginx
    state: started
  when: not letsencrypt_cert.stat.exists


- name: remove default config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: copy over nginx.conf
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify:
    - Restart nginx

- name: copy over load-balancer.conf
  template:
    src: load-balancer.conf.j2
    dest: /etc/nginx/sites-available/load-balancer.conf
  notify:
    - Restart nginx

- name: create file link
  file:
    src: /etc/nginx/sites-available/load-balancer.conf
    path: /etc/nginx/sites-enabled/load-balancer.conf
    state: link

-   name: Create nginx prometheus exporter
    docker_container:
        name: nginx-prometheus
        image: nginx/nginx-prometheus-exporter:0.4.2
        ports:
            - "9113:9113"
        restart_policy: always
        state: started
        command:
            -nginx.scrape-uri=https://{{ domain_name }}/metrics
            -nginx.retries=10
            -nginx.ssl-verify=false
            -web.telemetry-path=/prometheus
